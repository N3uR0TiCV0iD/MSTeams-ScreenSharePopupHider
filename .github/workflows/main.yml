name: Build & Release

on:
  workflow_dispatch:

env:
  DOTNET_VERSION: 6.0.x
  PROJECT_NAME: MSTeams-ScreenSharePopupHider
  PROJECT_FILE: MSTeams-ScreenSharePopupHider\MSTeams-ScreenSharePopupHider.csproj

jobs:
  build:
    name: Build and release
    runs-on: windows-latest

    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 1

    - name: Install .NET ${{ env.DOTNET_VERSION }} SDK
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Publish application
      run: dotnet publish ${{ env.PROJECT_FILE }} --configuration Release --output ./publish --self-contained true --runtime win-x64

    - name: Delete existing release
      run: |
        $headers = @{
          "Authorization" = "token ${{ secrets.GITHUB_TOKEN }}"
        }

        $releaseURL = "https://api.github.com/repos/${{ github.repository }}/releases/tags/current"
        try {
          $releaseResponse = Invoke-RestMethod -Uri $releaseURL -Headers $headers -ErrorAction Stop
          $releaseId = $releaseResponse.id

          $assetsURL = "https://api.github.com/repos/${{ github.repository }}/releases/$releaseId/assets"
          $assetsResponse = Invoke-RestMethod -Uri $assetsURL -Headers $headers -ErrorAction Stop

          foreach ($asset in $assetsResponse) {
            $deleteURL = "https://api.github.com/repos/${{ github.repository }}/releases/assets/$($asset.id)"
            Invoke-RestMethod -Uri $deleteUrl -Method Delete -Headers $headers -ErrorAction Stop
          }
        } catch {
          Write-Host "Error encountered: $_. Exception message: $($_.Exception.Message)"
          if ($_.Exception.Response.StatusCode -eq 'NotFound') {
            Write-Host "Release or assets not found. Skipping deletion."
          } else {
            throw $_.Exception
          }
        }
      shell: pwsh
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: current
        name: Current Version
        draft: false
        prerelease: false
        files: ./publish/${{ env.PROJECT_NAME }}.exe
        allow_updates: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
